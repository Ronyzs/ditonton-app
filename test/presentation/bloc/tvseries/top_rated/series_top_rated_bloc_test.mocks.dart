// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/bloc/tvseries/top_rated/series_top_rated_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i7;
import 'package:ditonton/domain/entities/tvseries.dart' as _i8;
import 'package:ditonton/domain/repositories/tvseries_repository.dart' as _i2;
import 'package:ditonton/domain/usecases/get_top_rated_tvseries.dart' as _i4;
import 'package:ditonton/presentation/bloc/tvseries/tvseries_top_rated/series_top_rated_bloc.dart'
    as _i5;
import 'package:flutter_bloc/flutter_bloc.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTvSeriesRepository_0 extends _i1.Fake
    implements _i2.TvSeriesRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeGetTopRatedTvSeries_2 extends _i1.Fake
    implements _i4.GetTopRatedTvSeries {}

class _FakeSeriesTopRatedState_3 extends _i1.Fake
    implements _i5.SeriesTopRatedState {}

class _FakeStreamSubscription_4<T> extends _i1.Fake
    implements _i6.StreamSubscription<T> {}

/// A class which mocks [GetTopRatedTvSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTvSeries extends _i1.Mock
    implements _i4.GetTopRatedTvSeries {
  MockGetTopRatedTvSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_0()) as _i2.TvSeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TvSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  Future<_i3.Either<_i7.Failure, List<_i8.TvSeries>>>.value(
                      _FakeEither_1<_i7.Failure, List<_i8.TvSeries>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i8.TvSeries>>>);
}

/// A class which mocks [SeriesTopRatedBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesTopRatedBloc extends _i1.Mock
    implements _i5.SeriesTopRatedBloc {
  MockSeriesTopRatedBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.GetTopRatedTvSeries get getTopRatedTvSeries => (super.noSuchMethod(
      Invocation.getter(#getTopRatedTvSeries),
      returnValue: _FakeGetTopRatedTvSeries_2()) as _i4.GetTopRatedTvSeries);
  @override
  _i5.SeriesTopRatedState get state => (super.noSuchMethod(
      Invocation.getter(#state),
      returnValue: _FakeSeriesTopRatedState_3()) as _i5.SeriesTopRatedState);
  @override
  _i6.Stream<_i5.SeriesTopRatedState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i5.SeriesTopRatedState>.empty())
          as _i6.Stream<_i5.SeriesTopRatedState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void add(_i5.SeriesTopRatedEvent? event) =>
      super.noSuchMethod(Invocation.method(#add, [event]),
          returnValueForMissingStub: null);
  @override
  void onEvent(_i5.SeriesTopRatedEvent? event) =>
      super.noSuchMethod(Invocation.method(#onEvent, [event]),
          returnValueForMissingStub: null);
  @override
  _i6.Stream<_i9.Transition<_i5.SeriesTopRatedEvent, _i5.SeriesTopRatedState>>
      transformEvents(
              _i6.Stream<_i5.SeriesTopRatedEvent>? events,
              _i9.TransitionFunction<_i5.SeriesTopRatedEvent, _i5.SeriesTopRatedState>?
                  transitionFn) =>
          (super.noSuchMethod(
                  Invocation.method(#transformEvents, [events, transitionFn]),
                  returnValue:
                      Stream<_i9.Transition<_i5.SeriesTopRatedEvent, _i5.SeriesTopRatedState>>.empty())
              as _i6.Stream<
                  _i9.Transition<_i5.SeriesTopRatedEvent, _i5.SeriesTopRatedState>>);
  @override
  void emit(_i5.SeriesTopRatedState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void on<E extends _i5.SeriesTopRatedEvent>(
          _i9.EventHandler<E, _i5.SeriesTopRatedState>? handler,
          {_i9.EventTransformer<E>? transformer}) =>
      super.noSuchMethod(
          Invocation.method(#on, [handler], {#transformer: transformer}),
          returnValueForMissingStub: null);
  @override
  _i6.Stream<_i5.SeriesTopRatedState> mapEventToState(
          _i5.SeriesTopRatedEvent? event) =>
      (super.noSuchMethod(Invocation.method(#mapEventToState, [event]),
              returnValue: Stream<_i5.SeriesTopRatedState>.empty())
          as _i6.Stream<_i5.SeriesTopRatedState>);
  @override
  void onTransition(
          _i9.Transition<_i5.SeriesTopRatedEvent, _i5.SeriesTopRatedState>?
              transition) =>
      super.noSuchMethod(Invocation.method(#onTransition, [transition]),
          returnValueForMissingStub: null);
  @override
  _i6.Stream<_i9.Transition<_i5.SeriesTopRatedEvent, _i5.SeriesTopRatedState>>
      transformTransitions(
              _i6.Stream<_i9.Transition<_i5.SeriesTopRatedEvent, _i5.SeriesTopRatedState>>?
                  transitions) =>
          (super.noSuchMethod(
                  Invocation.method(#transformTransitions, [transitions]),
                  returnValue:
                      Stream<_i9.Transition<_i5.SeriesTopRatedEvent, _i5.SeriesTopRatedState>>.empty())
              as _i6.Stream<
                  _i9.Transition<_i5.SeriesTopRatedEvent, _i5.SeriesTopRatedState>>);
  @override
  _i6.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.StreamSubscription<_i5.SeriesTopRatedState> listen(
          void Function(_i5.SeriesTopRatedState)? onData,
          {Function? onError,
          void Function()? onDone,
          bool? cancelOnError}) =>
      (super.noSuchMethod(
              Invocation.method(#listen, [
                onData
              ], {
                #onError: onError,
                #onDone: onDone,
                #cancelOnError: cancelOnError
              }),
              returnValue: _FakeStreamSubscription_4<_i5.SeriesTopRatedState>())
          as _i6.StreamSubscription<_i5.SeriesTopRatedState>);
  @override
  void onChange(_i9.Change<_i5.SeriesTopRatedState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
}
